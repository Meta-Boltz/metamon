// form.mtm - Pure HTML/JS contact form (PHP/Next.js style)
export default function ContactForm() {
  // Reactive form state
  $name! = ''
  $email! = ''
  $message! = ''
  $isSubmitting! = false
  $submitted! = false

  // Computed validation
  $isValidName = $name.trim().length >= 2
  $isValidEmail = $email.includes('@') && $email.includes('.')
  $isValidMessage = $message.trim().length >= 10
  $isFormValid = $isValidName && $isValidEmail && $isValidMessage

  // Form handlers
  $handleSubmit = async ($e) => {
    $e.preventDefault()
    if (!$isFormValid || $isSubmitting) return

    $isSubmitting = true
    
    try {
      // Simulate API call (works like PHP form processing)
      await new Promise(resolve => setTimeout(resolve, 1000))
      
      $formData = {
        name: $name,
        email: $email,
        message: $message,
        timestamp: new Date().toISOString()
      }

      emit('form-submitted', $formData)
      
      // Reset form
      $name = ''
      $email = ''
      $message = ''
      $submitted = true
      
      setTimeout(() => $submitted = false, 3000)
    } catch (error) {
      console.error('Form submission failed:', error)
    } finally {
      $isSubmitting = false
    }
  }

  $updateName = ($e) => $name = $e.target.value
  $updateEmail = ($e) => $email = $e.target.value
  $updateMessage = ($e) => $message = $e.target.value

  <template>
    <div class="contact-form-container">
      <h2>Contact Form</h2>
      
      {#if $submitted}
        <div class="success-message">
          âœ… Thank you! Your message has been sent successfully.
        </div>
      {:else}
        <form class="contact-form" submit={$handleSubmit}>
          <div class="form-group">
            <label for="name">Name *</label>
            <input
              id="name"
              type="text"
              value={$name}
              input={$updateName}
              class:invalid={$name && !$isValidName}
              placeholder="Enter your full name"
              required
            />
            {#if $name && !$isValidName}
              <span class="error">Name must be at least 2 characters</span>
            {/if}
          </div>

          <div class="form-group">
            <label for="email">Email *</label>
            <input
              id="email"
              type="email"
              value={$email}
              input={$updateEmail}
              class:invalid={$email && !$isValidEmail}
              placeholder="Enter your email address"
              required
            />
            {#if $email && !$isValidEmail}
              <span class="error">Please enter a valid email address</span>
            {/if}
          </div>

          <div class="form-group">
            <label for="message">Message *</label>
            <textarea
              id="message"
              value={$message}
              input={$updateMessage}
              class:invalid={$message && !$isValidMessage}
              placeholder="Enter your message (minimum 10 characters)"
              rows="5"
              required
            ></textarea>
            {#if $message && !$isValidMessage}
              <span class="error">Message must be at least 10 characters</span>
            {/if}
          </div>

          <div class="form-actions">
            <button 
              type="submit" 
              disabled={!$isFormValid || $isSubmitting}
              class="submit-btn"
            >
              {#if $isSubmitting}
                Sending...
              {:else}
                Send Message
              {/if}
            </button>
          </div>
        </form>
      {/if}
      
      <p class="note">
        This form works like PHP + Next.js - pure HTML/JS with reactive updates!
      </p>
    </div>
  </template>
}