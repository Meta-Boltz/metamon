// counter.mtm - Pure HTML/JS version (PHP/Next.js style)
export default function Counter() {
  // Modern MTM syntax with reactive variables
  $count! = signal('globalCount', 0)
  $theme! = signal('theme', 'light')

  // Computed values
  $isHighCount = $count > 10
  $displayText = `Count: ${$count}`

  // Event handlers
  $increment = () => {
    $count++
    emit('counter-updated', { value: $count, component: 'html' })
  }

  $decrement = () => {
    $count = Math.max(0, $count - 1)
    emit('counter-updated', { value: $count, component: 'html' })
  }

  $reset = () => {
    $count = 0
    emit('counter-reset', { component: 'html' })
  }

  <template>
    <div class="counter" data-theme={$theme}>
      <h3>Pure HTML/JS Counter</h3>
      <div class="counter-display">
        <button click={$decrement} disabled={$count === 0}>-</button>
        <span class="count" class:high={$isHighCount}>{$displayText}</span>
        <button click={$increment}>+</button>
      </div>
      
      {#if $isHighCount}
        <div class="warning">High count detected!</div>
      {/if}
      
      <div class="actions">
        <button click={$reset} class="reset-btn">Reset</button>
      </div>
      
      <small>Works like PHP + Next.js - no framework needed!</small>
    </div>
  </template>
}