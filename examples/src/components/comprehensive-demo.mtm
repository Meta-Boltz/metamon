---
target: reactjs
channels:
  - event: demo-action
    emit: onDemoAction
---

export default function ComprehensiveDemo() {
  // 🎯 Modern MTM Syntax Showcase
  
  // 1. Variable declarations with $ prefix and type inference
  $counter! = 0                           // Reactive number (inferred)
  $message: string = "Hello MTM!"         // Explicit string type
  $isVisible! = true                      // Reactive boolean (inferred)
  $items! = []                           // Reactive array (inferred)
  $user! = { name: '', email: '' }       // Reactive object (inferred)
  $price: float = 99.99                  // Explicit float type
  
  // 2. Function declarations with simplified syntax
  $increment = () => {
    $counter++
    emit('demo-action', { type: 'increment', value: $counter })
  }
  
  $decrement = () => {
    $counter = Math.max(0, $counter - 1)
    emit('demo-action', { type: 'decrement', value: $counter })
  }
  
  $addItem = ($text: string) => {
    if (!$text.trim()) return
    
    $newItem = {
      id: Date.now(),
      text: $text.trim(),
      completed: false,
      timestamp: Date.now()
    }
    
    $items = [...$items, $newItem]
    emit('demo-action', { type: 'add_item', item: $newItem })
  }
  
  $toggleItem = ($id: number) => {
    $items = $items.map($item => 
      $item.id === $id 
        ? { ...$item, completed: !$item.completed }
        : $item
    )
  }
  
  $removeItem = ($id: number) => {
    $items = $items.filter($item => $item.id !== $id)
    emit('demo-action', { type: 'remove_item', id: $id })
  }
  
  $updateUser = ($field: string, $value: string) => {
    $user = { ...$user, [$field]: $value }
  }
  
  $resetAll = () => {
    $counter = 0
    $items = []
    $user = { name: '', email: '' }
    $isVisible = true
    emit('demo-action', { type: 'reset_all' })
  }
  
  // Computed values (reactive expressions)
  $completedCount = $items.filter($item => $item.completed).length
  $totalItems = $items.length
  $completionRate = $totalItems > 0 ? ($completedCount / $totalItems * 100).toFixed(1) : 0
  
  // Local state for form inputs
  $newItemText! = ''
  
  return template(`
    <div class="comprehensive-demo">
      <header class="demo-header">
        <h1>🚀 Modern MTM Syntax Comprehensive Demo</h1>
        <p>Showcasing all features of the evolved MTM syntax</p>
      </header>
      
      <!-- Counter Section -->
      <section class="demo-section">
        <h2>📊 Counter with Reactive Variables</h2>
        <div class="counter-controls">
          <button click="{{$decrement}}" class="button secondary">-</button>
          <span class="counter-display">{{$counter}}</span>
          <button click="{{$increment}}" class="button">+</button>
        </div>
        <p class="counter-message">{{$message}} Current count: {{$counter}}</p>
      </section>
      
      <!-- Todo List Section -->
      <section class="demo-section">
        <h2>📝 Todo List with Array Management</h2>
        <div class="todo-input">
          <input 
            value="{{$newItemText}}"
            input="{{(e) => $newItemText = e.target.value}}"
            keyup.enter="{{() => { $addItem($newItemText); $newItemText = '' }}}"
            placeholder="Add a new todo item..."
            class="input"
          />
          <button 
            click="{{() => { $addItem($newItemText); $newItemText = '' }}}"
            class="button"
            disabled="{{!$newItemText.trim()}}"
          >
            Add Item
          </button>
        </div>
        
        <!-- Todo Statistics -->
        <div class="todo-stats">
          <span>Total: {{$totalItems}}</span>
          <span>Completed: {{$completedCount}}</span>
          <span>Progress: {{$completionRate}}%</span>
        </div>
        
        <!-- Todo List -->
        {{#if $items.length > 0}}
          <ul class="todo-list">
            {{#each $items as item}}
              <li class="todo-item {{item.completed ? 'completed' : ''}}" key="{{item.id}}">
                <input 
                  type="checkbox" 
                  checked="{{item.completed}}"
                  change="{{() => $toggleItem(item.id)}}"
                />
                <span class="todo-text">{{item.text}}</span>
                <small class="todo-time">{{new Date(item.timestamp).toLocaleTimeString()}}</small>
                <button 
                  click="{{() => $removeItem(item.id)}}"
                  class="button danger small"
                >
                  Remove
                </button>
              </li>
            {{/each}}
          </ul>
        {{else}}
          <p class="empty-state">No todo items yet. Add one above!</p>
        {{/if}}
      </section>
      
      <!-- User Form Section -->
      <section class="demo-section">
        <h2>👤 User Form with Object Updates</h2>
        <div class="user-form">
          <div class="form-group">
            <label>Name:</label>
            <input 
              value="{{$user.name}}"
              input="{{(e) => $updateUser('name', e.target.value)}}"
              placeholder="Enter your name"
              class="input"
            />
          </div>
          <div class="form-group">
            <label>Email:</label>
            <input 
              type="email"
              value="{{$user.email}}"
              input="{{(e) => $updateUser('email', e.target.value)}}"
              placeholder="Enter your email"
              class="input"
            />
          </div>
          <div class="user-preview">
            <h4>User Preview:</h4>
            {{#if $user.name || $user.email}}
              <p><strong>Name:</strong> {{$user.name || 'Not provided'}}</p>
              <p><strong>Email:</strong> {{$user.email || 'Not provided'}}</p>
            {{else}}
              <p class="empty-state">Fill in the form to see preview</p>
            {{/if}}
          </div>
        </div>
      </section>
      
      <!-- Visibility Toggle Section -->
      <section class="demo-section">
        <h2>👁️ Conditional Rendering</h2>
        <button 
          click="{{() => $isVisible = !$isVisible}}"
          class="button secondary"
        >
          {{$isVisible ? 'Hide' : 'Show'}} Content
        </button>
        
        {{#if $isVisible}}
          <div class="conditional-content">
            <h3>🎉 This content is conditionally rendered!</h3>
            <p>Price: ${{$price}}</p>
            <p>Visibility state: {{$isVisible ? 'Visible' : 'Hidden'}}</p>
            <p>Complex expression: {{$counter * 2 + $items.length}}</p>
          </div>
        {{/if}}
      </section>
      
      <!-- Actions Section -->
      <section class="demo-section">
        <h2>🎮 Actions</h2>
        <div class="action-buttons">
          <button click="{{$resetAll}}" class="button danger">
            Reset Everything
          </button>
          <button 
            click="{{() => emit('demo-action', { type: 'manual_event', timestamp: Date.now() })}}"
            class="button secondary"
          >
            Emit Custom Event
          </button>
        </div>
      </section>
      
      <!-- Syntax Features Summary -->
      <section class="demo-section">
        <h2>✨ Syntax Features Demonstrated</h2>
        <div class="features-grid">
          <div class="feature-item">
            <h4>$ Prefix Variables</h4>
            <code>$counter! = 0</code>
          </div>
          <div class="feature-item">
            <h4>Type Annotations</h4>
            <code>$price: float = 99.99</code>
          </div>
          <div class="feature-item">
            <h4>Reactive Variables</h4>
            <code>$items! = []</code>
          </div>
          <div class="feature-item">
            <h4>Arrow Functions</h4>
            <code>$increment = () => $counter++</code>
          </div>
          <div class="feature-item">
            <h4>Template Binding</h4>
            <code>{{$counter}}</code>
          </div>
          <div class="feature-item">
            <h4>Event Handlers</h4>
            <code>click="{{$increment}}"</code>
          </div>
          <div class="feature-item">
            <h4>Conditional Rendering</h4>
            <code>{{#if $isVisible}}</code>
          </div>
          <div class="feature-item">
            <h4>List Rendering</h4>
            <code>{{#each $items as item}}</code>
          </div>
        </div>
      </section>
    </div>
  `)
}