---
target: reactjs
channels:
  - event: counter-updated
    emit: onCounterUpdate
---

// Primitive counter component using universal patterns
export default function Counter() {
  // Use Metamon's universal state management
  const count = useSignal('globalCount', 0);
  const { emit } = usePubSub();
  
  const increment = () => {
    count.update(count.value + 1);
    emit('counter-updated', { value: count.value });
  };
  
  // Universal template syntax (compiles to JSX/template/etc)
  return template(`
    <div class="counter">
      <span>Count: {{count.value}}</span>
      <button onclick="{{increment}}">+1</button>
    </div>
  `);
}

// Metamon provides these universally
function useSignal(key, initial) { /* ... */ }
function usePubSub() { /* ... */ }
function template(str) { /* ... */ }