---
target: svelte
channels:
  - event: user-added
    emit: onUserAdded
  - event: user-removed
    emit: onUserRemoved
  - event: user-action
    emit: onUserAction
---

export default function SvelteUserList() {
  // Modern MTM syntax with reactive variables
  $userCount! = useSignal('userCount', 0)
  $users! = []
  $newUserName! = ''
  $userIdCounter! = 1

  // Subscribe to user actions from other frameworks
  subscribe('user-action', ($data) => {
    if ($data.framework !== 'Svelte') {
      console.log(`Received action from ${$data.framework}:`, $data.action)
    }
  })

  // Subscribe to counter updates to sync user count
  subscribe('counter-updated', ($data) => {
    // Sync local user list with global counter when possible
    $diff = $userCount - $users.length
    if ($diff > 0) {
      // Add placeholder users
      $newUsers = [...$users]
      for ($i = 0; $i < $diff; $i++) {
        $newUsers.push({
          id: $userIdCounter++,
          name: `User ${$userIdCounter - 1}`,
          framework: $data.framework || 'System',
          timestamp: Date.now()
        })
      }
      $users = $newUsers
    }
  })

  $addUser = () => {
    if (!$newUserName.trim()) return
    
    $user = {
      id: $userIdCounter++,
      name: $newUserName.trim(),
      framework: 'Svelte',
      timestamp: Date.now()
    }
    
    $users = [...$users, $user]
    $userCount = $userCount + 1
    
    emit('user-added', $user)
    emit('user-action', {
      action: 'add_user',
      framework: 'Svelte',
      data: { userName: $user.name }
    })
    
    $newUserName = ''
  }

  $removeUser = ($userId) => {
    $removedUser = $users.find($u => $u.id === $userId)
    $users = $users.filter($u => $u.id !== $userId)
    
    if ($removedUser) {
      $userCount = Math.max(0, $userCount - 1)
      
      emit('user-removed', $removedUser)
      emit('user-action', {
        action: 'remove_user',
        framework: 'Svelte',
        data: { userName: $removedUser.name }
      })
    }
  }

  $clearAllUsers = () => {
    $users = []
    $userCount = 0
    
    emit('user-action', {
      action: 'clear_all_users',
      framework: 'Svelte'
    })
  }

  $formatTime = ($timestamp) => {
    return new Date($timestamp).toLocaleTimeString()
  }

  return template(`
    <div class="component-demo">
      <div class="user-input">
        <input 
          value="{{$newUserName}}"
          input="{{(e) => $newUserName = e.target.value}}"
          keyup="{{(e) => e.key === 'Enter' && $addUser()}}"
          class="input" 
          placeholder="Enter user name..."
        />
        <button click="{{$addUser}}" class="button" disabled="{{!$newUserName.trim()}}">
          Add User
        </button>
      </div>

      <div class="user-stats">
        <div class="counter">
          <span>Total Users:</span>
          <span class="counter-value">{{$userCount}}</span>
          <span style="font-size: 12px; color: #666;">
            (Global Signal)
          </span>
        </div>
        <div class="user-stats">
          <span>Local Users:</span>
          <span class="counter-value">{{$users.length}}</span>
          <span style="font-size: 12px; color: #666;">
            (Svelte Store)
          </span>
        </div>
      </div>

      <div class="user-list">
        {{#if $users.length === 0}}
          <div style="text-align: center; color: #666; padding: 20px;">
            No users added yet. Add the first one!
          </div>
        {{else}}
          {{#each $users as user}}
            <div class="user-item" key="{{user.id}}">
              <div class="user-info">
                <strong>{{user.name}}</strong>
                <div style="font-size: 11px; color: #666;">
                  Added via {{user.framework}} at {{$formatTime(user.timestamp)}}
                </div>
              </div>
              <button 
                click="{{() => $removeUser(user.id)}}"
                class="button secondary"
                style="padding: 4px 8px; font-size: 12px;"
              >
                Remove
              </button>
            </div>
          {{/each}}
        {{/if}}
      </div>

      {{#if $users.length > 0}}
        <button click="{{$clearAllUsers}}" class="button" style="margin-top: 10px; width: 100%;">
          Clear All Users
        </button>
      {{/if}}

      <div style="margin-top: 15px; font-size: 12px; color: #666; padding: 10px; background: #f9fafb; border-radius: 6px;">
        <strong>Svelte Integration:</strong><br/>
        This component demonstrates modern MTM syntax with reactive variables.
        User additions update the global counter signal shared across all frameworks.
      </div>
    </div>
  `)
}