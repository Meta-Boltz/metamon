// ðŸŒŸ METAMON SYNTAX IDEAS - Pick your favorite!

import ReactButton from './ReactButton.jsx';
import VueCard from './VueCard.vue';
import SvelteModal from './SvelteModal.svelte';

// ðŸ’¡ IDEA 1: Emoji-based syntax (fun and unique!)
export default function EmojiSyntax() {
  const count = ðŸ“Š('counter', 0);  // signal
  const events = ðŸ“¡();             // pubsub
  
  return ðŸŽ¨`
    <div>
      <ReactButton @click="count++" />
      <VueCard :count="count" />
      <SvelteModal {count} />
    </div>
  `;
}

// ðŸ’¡ IDEA 2: Super minimal syntax
export default function MinimalSyntax() {
  let count = $('counter', 0);     // $ for signals
  let events = @();                // @ for events
  
  return `
    <div>
      <ReactButton onClick={() => count++} />
      <VueCard :count="count" />
      <SvelteModal bind:count />
    </div>
  `;
}

// ðŸ’¡ IDEA 3: Natural language syntax
export default function NaturalSyntax() {
  share count = 0;                 // shared state
  listen events;                   // event system
  
  return html`
    <div>
      <ReactButton count={count} />
      <VueCard :count="count" />
      <SvelteModal {count} />
    </div>
  `;
}

// ðŸ’¡ IDEA 4: Framework-aware syntax
export default function FrameworkAware() {
  const state = metamon({
    count: 0,
    theme: 'light',
    users: []
  });
  
  return (
    <universal>
      <react>
        <ReactButton onClick={() => state.count++} />
      </react>
      
      <vue>
        <VueCard :count="state.count" />
      </vue>
      
      <svelte>
        <SvelteModal bind:count={state.count} />
      </svelte>
    </universal>
  );
}

// ðŸ’¡ IDEA 5: Super clean and simple (my favorite!)
export default function SuperClean() {
  // Just use normal JavaScript + universal functions
  const count = signal(0);
  const { emit, on } = events();
  
  const increment = () => {
    count.set(count.get() + 1);
    emit('count-changed', count.get());
  };
  
  return (
    <div className="app">
      <ReactButton onClick={increment} />
      <VueCard count={count.get()} />
      <SvelteModal count={count.get()} />
    </div>
  );
}